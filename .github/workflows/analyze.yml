# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Part of the Tit Solver project, under the MIT License
# See /LICENSE.md for license information.
# SPDX-License-Identifier: MIT
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

name: Analyze

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

jobs:

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

  analyze_sonar:
    name: Analyze
    runs-on: ubuntu-latest
    env:
      # g++ and gcov executables.
      GXX_EXE: g++-13
      GCOV_EXE: gcov-13
      # Coverage report file path (Sonar for the future).
      SONAR_COVERAGE_REPORT_PATH: sonar_coverage.xml
      CODECOV_COVERAGE_REPORT_PATH: codecov_coverage.xml
      # Directory where build-wrapper output will be placed.
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Install packages and tools
        continue-on-error: true # might fail for unknown reason.
        run: |
          # Install packages and tools
          ## Run installation script.
          ./build/install_packages.sh
          ## Update vcpkg packages.
          cd $VCPKG_INSTALLATION_ROOT
          git reset --hard
          git checkout master
          git pull > /dev/null
          ./bootstrap-vcpkg.sh

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Cache vcpkg packages
        uses: actions/cache@v3
        with:
          path: output/cmake_output/vcpkg_installed
          key: vcpkg-${{ runner.os }}-${{ env.GXX_EXE }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: vcpkg-${{ runner.os }}-${{ env.GXX_EXE }}-${{ hashFiles('vcpkg.json') }}

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Build and test
        run: |
          build-wrapper-linux-x86-64 \
            --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} \
            build/build.py \
              --compiler=${{ env.GXX_EXE }} \
              --config=Coverage \
              --test

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Collect coverage reports
        run: |
          # Collect coverage reports
          ## See reasons for using `--exclude-*` and `--decisions` below:
          ## https://www.gcovr.com/en/stable/faq.html#why-does-c-code-have-so-many-uncovered-branches
          gcovr \
            --gcov-executable "gcov-13" \
            -e "output/*" -e "tests/*" \
            --exclude-unreachable-branches \
            --exclude-throw-branches \
            --decisions \
            --xml "${{ env.CODECOV_COVERAGE_REPORT_PATH }}" \
            --sonarqube "${{ env.SONAR_COVERAGE_REPORT_PATH }}"

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.CODECOV_COVERAGE_REPORT_PATH }}

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths="${{ env.SONAR_COVERAGE_REPORT_PATH }}"

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
