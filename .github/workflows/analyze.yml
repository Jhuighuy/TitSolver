# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Part of the Tit Solver project, under the MIT License.
# See /LICENSE.md for license information. SPDX-License-Identifier: MIT
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

name: Analyze

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

jobs:

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

  analyze_sonar:
    name: Analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-13]
        coverage_tool: [gcov-13]
        configuration: [Coverage]
    env:
      # Coverage report file path (Sonar for the future).
      SONAR_COVERAGE_REPORT_PATH: sonar_coverage.xml
      CODECOV_COVERAGE_REPORT_PATH: codecov_coverage.xml
      # Directory where build-wrapper output will be placed.
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Install packages and tools
        continue-on-error: true # might fail for unknown reason.
        run: |
          # Install packages and tools
          ## Fetch fresh packages.
          sudo apt -qq update
          ## Install the toolchain.
          sudo apt -qq install cmake g++-13
          ## Install Qt.
          sudo apt -qq install libglx-dev libgl1-mesa-dev qt6-base-dev
          ## Install LLVM and related tools.
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 17
          sudo apt -qq install clang-17 clang-tidy-17 libomp-17-dev
          sudo apt -qq install iwyu
          ## Install Python tools.
          pip3 install --user --upgrade gcovr
          pip3 install --user --upgrade codespell

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Update vcpkg packages
        run: |
          # Update vcpkg packages
          ## Save the current directory.
          WORK_DIR=$(pwd)
          ## Update vcpkg packages.
          cd $VCPKG_INSTALLATION_ROOT
          git reset --hard
          git checkout master
          git pull
          ./bootstrap-vcpkg.sh
          ## Stamp the last commit's hash.
          git rev-parse HEAD > $WORK_DIR/vcpkg.commit_hash

      - name: Cache vcpkg packages
        uses: actions/cache@v3
        with:
          path: output/cmake_output/vcpkg_installed
          key: vcpkg-${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('vcpkg.*') }}
          restore-keys: vcpkg-${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('vcpkg.*') }}

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Build and test
        run: |
          build-wrapper-linux-x86-64                                           \
            --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}                         \
            build/build.py                                                     \
              --compiler=${{ matrix.compiler }}                                \
              --config=${{ matrix.configuration }}                             \
              --test

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Collect coverage reports
        run: |
          # Collect coverage reports
          ## See reasons for using `--exclude-*` and `--decisions` below:
          ## https://www.gcovr.com/en/stable/faq.html#why-does-c-code-have-so-many-uncovered-branches
          gcovr                                                                \
            -e "output/*"                                                      \
            -e "tests/*"                                                       \
            --gcov-executable ${{ matrix.coverage_tool }}                      \
            --exclude-unreachable-branches                                     \
            --exclude-throw-branches                                           \
            --decisions                                                        \
            --xml "${{ env.CODECOV_COVERAGE_REPORT_PATH }}"                    \
            --sonarqube "${{ env.SONAR_COVERAGE_REPORT_PATH }}"

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.CODECOV_COVERAGE_REPORT_PATH }}

      # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner                                                                    \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths="${{ env.SONAR_COVERAGE_REPORT_PATH }}"

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
