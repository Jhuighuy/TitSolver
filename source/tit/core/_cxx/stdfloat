/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ *\
 * Part of BlueTit Solver, licensed under Apache 2.0 with Commons Clause.
 * Commercial use, including SaaS, requires a separate license, see /LICENSE.md
\* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#pragma once
#pragma GCC system_header

#include <cstddef>

#ifdef _LIBCPP_VERSION
_LIBCPP_BEGIN_NAMESPACE_STD
#elifdef __GLIBCXX__
namespace std _GLIBCXX_VISIBILITY(default) {
_GLIBCXX_BEGIN_NAMESPACE_VERSION
#endif

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

static_assert(sizeof(float) == 4, "'float' must be 32 bits");

// C++23 feature, missing in libc++ 20.1.6,
// does not work as expected on libstdc++ 15.1.0.
using float32_t = float;

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

static_assert(sizeof(double) == 8, "'double' must be 64 bits");

// C++23 feature, missing in libc++ 20.1.6,
// does not work as expected on libstdc++ 15.1.0.
using float64_t = double;

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#ifdef _LIBCPP_VERSION
_LIBCPP_END_NAMESPACE_STD
#elifdef __GLIBCXX__
_GLIBCXX_END_NAMESPACE_VERSION
} // namespace std _GLIBCXX_VISIBILITY(default)
#endif // ifdef _LIBCPP_VERSION
