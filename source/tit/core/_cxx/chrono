/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ *\
 * Part of BlueTit Solver, licensed under Apache 2.0 with Commons Clause.
 * Commercial use, including SaaS, requires a separate license, see /LICENSE.md
\* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#pragma once
#pragma GCC system_header

#include_next <chrono>

#ifdef _LIBCPP_VERSION

#include <ctime>
#include <string>
#include <utility>

_LIBCPP_BEGIN_NAMESPACE_STD

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

namespace chrono {

struct _ParseData final {
  string format;
  year_month_day* result;
};

// C++20 feature, missing in libc++ 20.1.8.
constexpr auto parse(string format, std::chrono::year_month_day& ymd)
    -> _ParseData {
  return _ParseData{std::move(format), &ymd};
}

template<class Stream>
auto operator>>(Stream& is, const _ParseData& data) -> Stream& {
  string line;
  if (!getline(is, line)) {
    is.setstate(ios_base::failbit);
    return is;
  }

  std::tm tm{};
  const auto* const end_ptr = strptime(line.c_str(), data.format.c_str(), &tm);
  if (end_ptr == nullptr) {
    is.setstate(ios_base::failbit);
    return is;
  }
  is.seekg(end_ptr - line.c_str());

  *data.result = year_month_day{year{tm.tm_year + 1900},
                                month{tm.tm_mon + 1},
                                day{tm.tm_mday}};
  return is;
}

} // namespace chrono

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_LIBCPP_END_NAMESPACE_STD

#endif
