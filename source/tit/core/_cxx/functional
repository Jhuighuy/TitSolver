/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ *\
 * Part of BlueTit Solver, licensed under Apache 2.0 with Commons Clause.
 * Commercial use, including SaaS, requires a separate license, see /LICENSE.md
\* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#pragma once
#pragma GCC system_header

#include_next <functional>

#ifdef _LIBCPP_VERSION
_LIBCPP_BEGIN_NAMESPACE_STD

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// C++23 feature, missing in libc++ 20.1.6.
template<class... Ts>
struct move_only_function : function<Ts...> {
  using function<Ts...>::function;

  move_only_function(move_only_function&&) noexcept = default;
  auto operator=(move_only_function&&) noexcept
      -> move_only_function& = default;

  move_only_function(const move_only_function&) noexcept = delete;
  auto operator=(const move_only_function&) noexcept
      -> move_only_function& = delete;

  ~move_only_function() noexcept = default;
};

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_LIBCPP_END_NAMESPACE_STD
#endif // ifdef _LIBCPP_VERSION
