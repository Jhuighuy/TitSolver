/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ *\
 * Part of BlueTit Solver, licensed under Apache 2.0 with Commons Clause.
 * Commercial use, including SaaS, requires a separate license, see /LICENSE.md
\* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
{
  "[cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "cmake.configureOnOpen": false,
  "editor.formatOnSave": true,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.rulers": [80],
  "explorer.sortOrderLexicographicOptions": "unicode",
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.exclude": {
    "**/.cache": true,
    "**/.mypy_cache": true,
    "**/__pycache__": true,
    "**/node_modules/**": true,
    "compile_flags.txt": true,
    "output": true
  },
  "files.watcherExclude": {
    "**/.cache/**": true,
    "**/.mypy_cache/**": true,
    "**/__pycache__/**": true,
    "**/dist/**": true,
    "**/output/**": true,
    "**/compile_flags.txt": true,
    "**/node_modules/**": true
  },
  "files.associations": {
    ".clang-tidy": "yaml",
    ".clangd": "yaml",
    "*.ipp": "cpp",
    "*.tcc": "cpp",
    "**/_templates/**.html": "jinja-html",
    "__availability": "cpp",
    "__bit_reference": "cpp",
    "__bits": "cpp",
    "__config": "cpp",
    "__debug": "cpp",
    "__errc": "cpp",
    "__hash_table": "cpp",
    "__locale": "cpp",
    "__memory": "cpp",
    "__mutex_base": "cpp",
    "__node_handle": "cpp",
    "__nullptr": "cpp",
    "__split_buffer": "cpp",
    "__std_stream": "cpp",
    "__string": "cpp",
    "__threading_support": "cpp",
    "__tree": "cpp",
    "__tuple": "cpp",
    "__verbose_abort": "cpp",
    "algorithm": "cpp",
    "any": "cpp",
    "armadillo": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "bit": "cpp",
    "bitset": "cpp",
    "cassert": "cpp",
    "ccomplex": "cpp",
    "cctype": "cpp",
    "cerrno": "cpp",
    "cfenv": "cpp",
    "cfloat": "cpp",
    "charconv": "cpp",
    "chrono": "cpp",
    "cinttypes": "cpp",
    "ciso646": "cpp",
    "climits": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "codecvt": "cpp",
    "compare": "cpp",
    "complex": "cpp",
    "concepts": "cpp",
    "condition_variable": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstdbool": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctgmath": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "exception": "cpp",
    "execution": "cpp",
    "filesystem": "cpp",
    "format": "cpp",
    "forward_list": "cpp",
    "fstream": "cpp",
    "functional": "cpp",
    "future": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "ios": "cpp",
    "iosfwd": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "iterator": "cpp",
    "limits": "cpp",
    "list": "cpp",
    "locale": "cpp",
    "map": "cpp",
    "memory_resource": "cpp",
    "memory": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "numbers": "cpp",
    "numeric": "cpp",
    "optional": "cpp",
    "ostream": "cpp",
    "queue": "cpp",
    "random": "cpp",
    "ranges": "cpp",
    "ratio": "cpp",
    "regex": "cpp",
    "semaphore": "cpp",
    "set": "cpp",
    "shared_mutex": "cpp",
    "source_location": "cpp",
    "span": "cpp",
    "sstream": "cpp",
    "stack": "cpp",
    "stacktrace": "cpp",
    "stdexcept": "cpp",
    "stdfloat": "cpp",
    "stop_token": "cpp",
    "streambuf": "cpp",
    "string_view": "cpp",
    "string": "cpp",
    "strstream": "cpp",
    "system_error": "cpp",
    "thread": "cpp",
    "tuple": "cpp",
    "type_traits": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "utility": "cpp",
    "valarray": "cpp",
    "variant": "cpp",
    "vector": "cpp",
    "version": "cpp"
  },
  "python.languageServer": "Pylance",
  "python.analysis.extraPaths": [
    "${workspaceFolder}/source",
    // Until we figure out how to get the path from the ParaView installation.
    "/Applications/ParaView-5.13.1.app/Contents/Python/"
  ],
  "python.analysis.diagnosticSeverityOverrides": {
    "reportMissingModuleSource": "none"
  },
  "flake8.args": ["--config", "${workspaceFolder}/pyptoject.toml"]
}
